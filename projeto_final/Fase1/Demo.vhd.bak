library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity CounterGeral is
	port(clk: in std_logic;
		  stop: in std_logic;
		  valOut0: out std_logic(3 downto 0);
		  valOut1: out std_logic(3 downto 0);
		  valOut2: out std_logic(3 downto 0);
		  valOut3: out std_logic(3 downto 0);
		  valOut4: out std_logic(3 downto 0));
end CounterGeral;

architecture shell of CounterGeral is

	--Terminal count flags of each counter
	signal s_sUnitsTerm, s_sTensTerm	: std_logic_vector(3 downto 0);
	signal s_mUnitsTerm, s_mTensTerm	: std_logic_vector(3 downto 0);

	--signalRCO
	signal s_rco0: std_logic;
	signal s_rco1: std_logic;
	signal s_rco2: std_logic;
	signal s_rco3: std_logic;
	
	signal en_clk:std_logic;
	
	signal s_stop:std_logic;

begin
	stop <= s_stop;

	clk : entity work.en_gen(beh)
							--generic map(k => 5E6)
							port map(clkIn	=> CLOCK_50,
										en		=> en_clk
										);
	
	
	d0 : entity work.Counter4Bits(RTL)
				generic map(MAX =>9)
				port map(clk	=> en_clk,		
							stop	=> s_stop,
							valOut	=>	s_sUnitsTerm,
							RCO => s_rco0);
	
	d1 : entity work.Counter4Bits(RTL)
				generic map(MAX =>9)
				port map(clk	=> en_clk,		
							stop	=> s_stop,
							valOut	=>	s_sUnitsTerm,
							RCO => s_rco0);	
							
	d2 : entity work.Counter4Bits(RTL)
				generic map(MAX =>9)
				port map(clk	=> en_clk,		
							stop	=> s_stop,
							valOut	=>	s_sUnitsTerm,
							RCO => s_rco0);	
							
	d3 : entity work.Counter4Bits(RTL)
				generic map(MAX =>9)
				port map(clk	=> en_clk,		
							stop	=> s_stop,
							valOut	=>	s_sUnitsTerm,
							RCO => s_rco0);		
							
	d4 : entity work.Counter4Bits(RTL)
				generic map(MAX =>7)
				port map(clk	=> en_clk,		
							stop	=> s_stop,
							valOut	=>	s_sUnitsTerm,
							RCO => s_rco0);	
							
	
		--Bloco do display de 7 Segmentos dos segundos (HEX2)
	s_units_decod : entity work.Bin7SegDecoder(Behavioral)
							port map(enable	=> '1',
										binInput	=> s_sUnitsTerm,
										decOut_n	=> HEX2);


	--Bloco do display de 7 Segmentos dos segundos (HEX3)
	s_tens_decod : entity work.Bin7SegDecoder(Behavioral)
							port map(enable	=> '1',
										binInput	=> s_mUnitsTerm,
										decOut_n	=> HEX3);
							
	--Bloco do display de 7 Segmentos dos minutos (HEX4)	
	m_units_decod : entity work.Bin7SegDecoder(Behavioral)
							port map(enable	=> '1',
										binInput	=> s_sTensTerm,
										decOut_n	=> HEX4);
						
	--Bloco do display de 7 Segmentos dos minutos (HEX5)
	m_tens_decod : entity work.Bin7SegDecoder(Behavioral)
							port map(enable	=> '1',
										binInput	=> s_mTensTerm,
										decOut_n	=> HEX5);


end shell;